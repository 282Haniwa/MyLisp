%{
#include "defs.h"
#define YYSTYPE Cell *
%}
%token	INTEGER REAL LPAR RPAR DOT ATOMIC_SYMBOL;
%%
Program
	: SExpression
	{ $$ = $1; evaluate($$); }
	| Program SExpression
	{ $$ = $2; evaluate($$); }
SExpression
	: Atom
	{ $$ = $1; }
	| DottedPair
	{ $$ = $1; }
	| List
	{ $$ = $1; }
List
	: LPAR RPAR
	{ $$ = atom("nil", object(OBJ_ATOM, NULL)); }
	| LPAR ListPart RPAR
	{ $$ = $2; }
ListPart
	: SExpression
	{ $$ = cons($1, atom("nil", object(OBJ_ATOM, NULL))); }
	| ListPart SExpression
	{ $$ = list($1, cons($2, atom("nil", object(OBJ_ATOM, NULL)))); }
DottedPair
	: LPAR SExpression DOT SExpression RPAR
	{ $$ = cons($2, $4); }
Atom
	: ATOMIC_SYMBOL
	{ $$ = atom(yytext, object(OBJ_ATOM, NULL)); }
	| INTEGER
	{ $$ = atom(yytext, object(OBJ_INTEGER, yytext)); }
	| REAL
	{ $$ = atom(yytext, object(OBJ_REAL, yytext)); }
%%
#include "lex.yy.c"
void yyerror(char *s) {
	fprintf(stderr, "\n%s at %d: nearby \"%s\"\n\n", s, linecounter, yytext);
	exit(EXIT_FAILURE);
}
